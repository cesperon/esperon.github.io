{"remainingRequest":"/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/babel-loader/lib/index.js!/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue","mtime":1634793961359},{"path":"/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1634793960436},{"path":"/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/babel-loader/lib/index.js","mtime":1634793960114},{"path":"/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1634793960436},{"path":"/Users/cesperon/Desktop/portfolio/esperon.github.io/node_modules/vue-loader/lib/index.js","mtime":1634793961853}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PolygonParticles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default {\n  name: \"PolygonParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.createProton(canvas);\n      this.createEmitter({\n        canvas,\n        x: width / 2,\n        y: height / 2,\n        mainEmitter: true,\n        zone: \"bound\"\n      });\n\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      this.proton = new Proton();\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CustomRenderer();\n      renderer.onProtonUpdate = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n\n        context.beginPath();\n        drawPolygon(particle, particle.data.count);\n\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n\n      renderer.onParticleDead = particle => {};\n\n      const drawPolygon = (particle, count) => {\n        if (count >= 7) {\n          context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n          );\n        } else {\n          const radius = particle.radius;\n\n          for (let i = 0; i <= count; i++) {\n            let x =\n              particle.p.x +\n              radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n            let y =\n              particle.p.y +\n              radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n            if (i === 0) context.moveTo(x, y);\n            else context.lineTo(x, y);\n          }\n        }\n      };\n\n      return renderer;\n    },\n\n    createEmitter({\n      mainEmitter,\n      canvas,\n      x,\n      y,\n      radius,\n      color = COLOR,\n      zone = \"dead\",\n      once = \"all\",\n      alpha = 0.85,\n      gravity = 3.5\n    }) {\n      const emitter = this.proton.pool.get(Proton.Emitter);\n\n      if (!emitter.completed) {\n        emitter.rate = new Proton.Rate(\n          this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n          new Proton.Span(1.6, 2.2)\n        );\n\n        const radiusInit = mainEmitter\n          ? new Proton.Radius(10, 110)\n          : new Proton.Radius(3, radius);\n        emitter.addInitialize(new Proton.Mass(1));\n        emitter.addInitialize(radiusInit);\n        emitter.addInitialize(new Proton.Life(3, 6));\n        emitter.addInitialize(\n          new Proton.Velocity(\n            new Proton.Span(4, 6),\n            new Proton.Span(-90, 90),\n            \"polar\"\n          )\n        );\n\n        emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n        emitter.addBehaviour(new Proton.Color(color));\n        emitter.addBehaviour(new Proton.Scale(1, 0.3));\n        emitter.addBehaviour(new Proton.Rotate());\n        emitter.addBehaviour(new Proton.Gravity(gravity));\n\n        emitter.addBehaviour(this.customDeadBehaviour(canvas));\n        emitter.addBehaviour(\n          new Proton.CrossZone(\n            new Proton.RectZone(0, 0, canvas.width, canvas.height),\n            zone\n          )\n        );\n      }\n\n      emitter.p.x = x;\n      emitter.p.y = y;\n      if (once === \"once\") emitter.emit(\"once\");\n      else emitter.emit();\n\n      this.proton.addEmitter(emitter);\n      //this.expireEmitter(emitter);\n    },\n\n    expireEmitter(emitter) {\n      setTimeout(() => {\n        emitter.completed = true;\n        this.proton.pool.expire(emitter);\n        this.proton.removeEmitter(emitter);\n      }, 500);\n    },\n\n    customDeadBehaviour(canvas) {\n      return {\n        initialize: particle => {\n          particle.data = particle.data || {};\n          particle.data.oldRadius = particle.radius;\n          particle.data.emitterCount = 0;\n        },\n        applyBehaviour: particle => {\n          if (particle.radius < 5) return;\n          if (particle.data.emitterCount >= 2) return;\n\n          if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n            particle.data.emitterCount++;\n            this.createEmitter({\n              canvas,\n              x: particle.p.x,\n              y: particle.p.y,\n              radius: particle.radius * (1 / 2),\n              alpha: 0.5,\n              gravity: 5,\n              color: particle.color,\n              once: \"once\"\n            });\n          }\n        }\n      };\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles"}]}